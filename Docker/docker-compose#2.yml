version: '3'

services:
  # nginx-proxy:
  #   image: jwilder/nginx-proxy:alpine
  #   container_name: nginx-proxy
  #   restart: always
  #   labels:
  #     com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./nginx/data/certs:/etc/nginx/certs:ro
  #     - ./nginx/data/conf.d:/etc/nginx/conf.d
  #     - ./nginx/data/vhost.d:/etc/nginx/vhost.d
  #     - ./nginx/data/html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #   networks:
  #     - 

  # letsencrypt:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: letsencrypt
  #   volumes:
  #     - ./nginx/data/vhost.d:/etc/nginx/vhost.d
  #     - ./nginx/data/certs:/etc/nginx/certs:rw
  #     - ./nginx/data/html:/usr/share/nginx/html
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   depends_on:
  #     - nginx-proxy
  #   networks:
  #     - 

  vitagis.life:
    image: 
    container_name: 
    restart: on-failure
    ports:
      - 
    environment:
      # VIRTUAL_HOST: 
      # VIRTUAL_PORT: 
      ASPNETCORE_ENVIRONMENT: 
      ASPNETCORE_URLS: 
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: 
      # LETSENCRYPT_HOST: 
      # LETSENCRYPT_EMAIL: 
    depends_on:
      - keycloak
    # networks:
    #   - 

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    restart: always
    ports:
      - 8080:8080
      - 8443:8443
    environment:
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JDBC_PARAMS: ${JDBC_PARAMS}
      KEYCLOAK_HOSTNAME: 
      KEYCLOAK_HTTP_PORT: 
      KEYCLOAK_USER: 
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      # VIRTUAL_HOST:
      # VIRTUAL_PORT: 
      PROXY_ADDRESS_FORWARDING:
      # LETSENCRYPT_HOST: 
      # LETSENCRYPT_EMAIL: 
    command: -Dkeycloak.profile.feature.upload_scripts=enabled
    depends_on:
      - postgres
    # networks:
    #   - vitagis

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - data:/var/lib/postgresql/data
    # networks:
    #   - vitagis

  tranderworker:
    image: 
    container_name: 
    restart: on-failure
    environment:
      DOTNET_ENVIRONMENT: 
    # networks:
    #   - 

# networks:
#  :

volumes:
  data:
